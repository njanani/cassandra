// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `C2SPrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package FleCS;

public interface C2SPrx extends Ice.ObjectPrx
{
    public void Get(String bucketID, String objID, ByteSeqHolder content);

    public void Get(String bucketID, String objID, ByteSeqHolder content, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_Get(String bucketID, String objID);

    public Ice.AsyncResult begin_Get(String bucketID, String objID, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_Get(String bucketID, String objID, Ice.Callback __cb);

    public Ice.AsyncResult begin_Get(String bucketID, String objID, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_Get(String bucketID, String objID, Callback_C2S_Get __cb);

    public Ice.AsyncResult begin_Get(String bucketID, String objID, java.util.Map<String, String> __ctx, Callback_C2S_Get __cb);

    public void end_Get(ByteSeqHolder content, Ice.AsyncResult __result);

    public void Put(String bucketID, String objID, byte[] content);

    public void Put(String bucketID, String objID, byte[] content, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_Put(String bucketID, String objID, byte[] content);

    public Ice.AsyncResult begin_Put(String bucketID, String objID, byte[] content, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_Put(String bucketID, String objID, byte[] content, Ice.Callback __cb);

    public Ice.AsyncResult begin_Put(String bucketID, String objID, byte[] content, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_Put(String bucketID, String objID, byte[] content, Callback_C2S_Put __cb);

    public Ice.AsyncResult begin_Put(String bucketID, String objID, byte[] content, java.util.Map<String, String> __ctx, Callback_C2S_Put __cb);

    public void end_Put(Ice.AsyncResult __result);

    public void Append(String bucketID, String objID, byte[] content);

    public void Append(String bucketID, String objID, byte[] content, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_Append(String bucketID, String objID, byte[] content);

    public Ice.AsyncResult begin_Append(String bucketID, String objID, byte[] content, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_Append(String bucketID, String objID, byte[] content, Ice.Callback __cb);

    public Ice.AsyncResult begin_Append(String bucketID, String objID, byte[] content, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_Append(String bucketID, String objID, byte[] content, Callback_C2S_Append __cb);

    public Ice.AsyncResult begin_Append(String bucketID, String objID, byte[] content, java.util.Map<String, String> __ctx, Callback_C2S_Append __cb);

    public void end_Append(Ice.AsyncResult __result);
}
